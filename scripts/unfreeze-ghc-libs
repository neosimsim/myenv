#!/bin/sh -e

freezefile=cabal.project.freeze

usage() {
cat <<EOF
unfreeze-ghc-libs [-f freezefile]

-f freeze-file		File generated by cabal freeze. Will be
			overwritten. (Default: $freezefile)

The script removes Haskell packages from cabal.project.freeze, which are
installed globally, i.e. packages which are installed in GHC global library
paths, e.g. /usr/lib/ghc-8.0.2.

In my setup these are only packages installed together with GHC. Therefore
these packages should not be freezed, as freezing them makes it impossible to
build the cabal project with a different GHC version.
EOF
exit 1
}
shift $(($OPTIND -1))

while getopts 'f:h' name
do
	case $name in
	f) freezefile="$OPTARG" ;;
	?) usage ;;
	esac
done

removeTrailingVersion() {
	awk -F'-[^-]*$' '{print $1}'
}

removeMatchingLines() {
	sed -in "$1" "$2"
}

ghcLibDir=$(dirname $(which ghc))/../lib/ghc-$(ghc --numeric-version)
for pkg in `ls $ghcLibDir | removeTrailingVersion`
do
	echo removing $pkg from $freezefile
	removeMatchingLines "/^[[:blank:]]*any\.$pkg[[:blank:]]/d" "$freezefile"
	# Sometimes we have to remove the first package listed.
	removeMatchingLines "/^constraints: any\.$pkg[[:blank:]]/cconstraints:" "$freezefile"
done
