(setq create-lockfiles nil)
(setq auto-save-default nil)
(setq make-backup-files nil)

(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)
;; run package-install-selected-packages to install following packages
(setq package-selected-packages
      '(lsp-mode
        lsp-ui
        company
        lsp-haskell
        ))

(setq-default show-trailing-whitespace t)
(setq-default indicate-empty-lines t)
(setq kill-whole-line t)
(column-number-mode 1)

(setq-default indent-tabs-mode nil)
(defun kill-line-back () "kill backward to beginning of line"
       (interactive)
       (kill-line 0))
(global-font-lock-mode 0)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes '(adwaita)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Enable mouse support
(unless window-system
  (require 'mouse)
  (xterm-mouse-mode t)
  (global-set-key [mouse-4] (lambda ()
                              (interactive)
                              (scroll-down 1)))
  (global-set-key [mouse-5] (lambda ()
                              (interactive)
                              (scroll-up 1)))
  (defun track-mouse (e))
  (setq mouse-sel-mode t)
  )

;; Agda
;;


(load-file (let ((coding-system-for-read 'utf-8))
                (shell-command-to-string "agda-mode locate")))

;; Some keybinding do not work with Blink + tmux.
;; As a workaround we add some more keybinding to
(defun custom-agda-keys ()
  (global-set-key (kbd "C-c t") 'agda2-goal-type)
  (global-set-key (kbd "C-c SPC") 'agda2-give)
  (global-set-key (kbd "C-c ,") 'agda2-goal-and-context)
  (global-set-key (kbd "C-c .") 'agda2-goal-and-context-and-inferred)
  (global-set-key (kbd "C-c ;") 'agda2-goal-and-context-and-checked)
  (global-set-key (kbd "C-c C-_") 'agda2-show-goals) ;; C-c C-/ in Blink
  (global-set-key (kbd "C-c =") 'agda2-show-constraints))
(add-hook 'agda2-mode-hook 'custom-agda-keys)

(setq auto-mode-alist
   (append
     '(("\\.agda\\'" . agda2-mode)
       ("\\.lagda.tex\\'" . agda2-mode)
       ("\\.lagda.md\\'" . agda2-mode))
     auto-mode-alist))

(setq lsp-keymap-prefix "C-l")

(require 'lsp-mode)
(require 'lsp-ui)
(require 'lsp)
(require 'lsp-haskell)
;; Hooks so haskell and literate haskell major modes trigger LSP setup
(add-hook 'haskell-mode-hook #'lsp)
(add-hook 'haskell-literate-mode-hook #'lsp)
(add-hook 'haskell-mode-hook 'global-company-mode)
(add-hook 'haskell-literate-mode-hook 'global-company-mode)
